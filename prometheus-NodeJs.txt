âš¡ Step 1: Initialize Node.js Project
Open your terminal and run:

mkdir express-prometheus-grafana
cd express-prometheus-grafana
npm init -y
npm install express prom-client



âš¡ Step 2: Create Express Server with Prometheus Metrics
Create a file named server.js and add the following code:

const express = require("express");
const client = require("prom-client");

const app = express();
const PORT = 3001;

// Register metrics
const register = new client.Registry();
client.collectDefaultMetrics({ register });

// Custom metric (HTTP request duration)
const httpRequestDuration = new client.Histogram({
  name: "http_request_duration_seconds",
  help: "Duration of HTTP requests in seconds",
  labelNames: ["method", "route", "status_code"],
});
register.registerMetric(httpRequestDuration);

// Middleware for measuring request duration
app.use((req, res, next) => {
  const end = httpRequestDuration.startTimer();
  res.on("finish", () => {
    end({ method: req.method, route: req.path, status_code: res.statusCode });
  });
  next();
});

// Routes
app.get("/", (req, res) => {
  res.send("Hello, Express with Prometheus!");
});

// Prometheus metrics endpoint
app.get("/metrics", async (req, res) => {
  res.set("Content-Type", register.contentType);
  res.end(await register.metrics());
});

// Start server
app.listen(PORT, "0.0.0.0", () => {
  console.log(`âœ… Server running on http://localhost:${PORT}`);
});
Run the server:

npm start
ðŸ‘‰ Open in browser: http://localhost:3001/metrics to see Prometheus metrics.





âš¡ Step 3: Configure Prometheus
Open Prometheus configuration file:

sudo nano /etc/prometheus/prometheus.yml
Add the following job:

scrape_configs:
  - job_name: "express-app"
    static_configs:
      - targets: ["<your-system-ip>:3001"]
ðŸ‘‰ Replace <your-system-ip> with your actual IP (e.g., 192.168.1.100:3001).

Save file (CTRL + O, Enter, CTRL + X).

Restart Prometheus:

sudo systemctl restart prometheus
Check targets:

ðŸ‘‰ Open http://localhost:9090/classic/targets and verify express-app status is UP âœ…





âš¡ Step 4: Visualize Metrics in Grafana
Open Grafana: http://localhost:3000
Go to Dashboards > New Dashboard > Add Query
Select Prometheus as data source
Run this query:
sum by (instance, method) (rate(http_request_duration_seconds_count[5m]))
Set Legend as:
{{instance}} - {{method}}
Under Standard Options > Unit, select requests/sec (rps)
ðŸŽ‰ Now you can see real-time Express app metrics in Grafana!

ðŸ“Š Example Dashboard
HTTP Requests per second (RPS)
Average Request Duration
Success vs Failed Requests
ðŸš€ Conclusion
You have successfully:

Built an Express.js app with Prometheus metrics
Configured Prometheus to scrape metrics
Created Grafana dashboard for visualization